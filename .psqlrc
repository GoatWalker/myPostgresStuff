-----------------------------------------
-- psqlrc file to set psql preferences --
-- Author : Bob Henkel                 --
-- Notes: Tested on PG 9.3             --
-----------------------------------------


\set PROMPT1 '\n%[%033[1;31;40m%] -> %[%033[32m%]psql:%[%033[36m%]//%n%[%033[34m%]@%[%033[36m%]%`hostname`:%>%[%033[33m%]/%/ %[%033[K%]%[%033[0m%]\n\n%[%033[1;33m%]%/%-%x#%[%033[0m%] '
\set PAGER OFF
\set HISTFILE ~/.psql_history- :HOST - : DBNAME -- Remove space between : and DBNAME
\set HISTSIZE
-- If a command is run more than once in a row, only store it once in the history.
\set HISTCONTROL ignoredup
\set COMP_KEYWORD_CASE upper
\set VERBOSITY verbose
\timing on
\encoding unicode

\pset null Â¤
\pset linestyle unicode
\pset border 2
\pset format wrapped

\echo '\nCurrent Host Server Date Time : '`date` '\n'

\echo 'Administrative queries:\n'
\echo '\t\t\t:settings\t-- Server Settings'
\echo '\t\t\t:conninfo\t-- Server connections'
\echo '\t\t\t:activity\t-- Server activity'
\echo '\t\t\t:locks\t\t-- Lock info'
\echo '\t\t\t:waits\t\t-- Waiting queires'
\echo '\t\t\t:blocking\t-- Blocking'
\echo '\t\t\t:dbsize\t\t-- Database Size'
\echo '\t\t\t:tablesize\t-- Tables Size'
\echo '\t\t\t:uselesscol\t-- Useless columns'
\echo '\t\t\t:uptime\t\t-- Server uptime'
\echo '\t\t\t:menu\t\t-- Help Menu'
\echo '\t\t\t\\h\t\t-- Help with SQL commands'
\echo '\t\t\t\\?\t\t-- Help with psql commands\n'

\echo 'Development queries:\n'
\echo '\t\t\t:sp\t\t\t\t-- Current Search Path'
\echo '\t\t\t:benchmark_cpu_memory\t\t-- Benchmark CPU and Memory'
\echo '\t\t\t:benchmark_cpu_memory_disk\t-- Benchmark CPU, Memory, and Disk'
\echo '\t\t\t:clear\t\t\t\t-- Clear screen'
\echo '\t\t\t:ll\t\t\t\t-- List\n'


-- Administration queries

\set menu '\\i ~/.psqlrc'

\set settings 'select name, setting,unit,context from pg_settings;'

\set locks  'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user, kl.pid AS blocking_pid, ka.usename AS blocking_user, a.query AS blocked_statement FROM pg_catalog.pg_locks bl JOIN pg_catalog.pg_stat_activity a ON bl.pid = a.pid JOIN pg_catalog.pg_locks kl JOIN pg_catalog.pg_stat_activity ka ON kl.pid = ka.pid ON bl.transactionid = kl.transactionid AND bl.pid != kl.pid WHERE NOT bl.granted;'

\set conninfo 'select usename, count(*) from pg_stat_activity group by usename;'

\set activity 'select datname, pid, usename, application_name,client_addr, client_hostname, client_port, query, state from pg_stat_activity;'

\set waits 'SELECT pg_stat_activity.pid, pg_stat_activity.query, pg_stat_activity.waiting, now() - pg_stat_activity.query_start AS \"totaltime\", pg_stat_activity.backend_start FROM pg_stat_activity WHERE pg_stat_activity.query !~ \'%IDLE%\'::text AND pg_stat_activity.waiting = true;'

\set blocking 'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user,ka.query AS blocking_statement, now() - ka.query_start AS blocking_duration,kl.pid                 AS blocking_pid,ka.usename             AS blocking_user,a.query                AS blocked_statement,now() - a.query_start  AS blocked_duration FROM  pg_catalog.pg_locks         bl JOIN pg_catalog.pg_stat_activity a  ON a.pid = bl.pid JOIN pg_catalog.pg_locks         kl ON kl.transactionid = bl.transactionid AND kl.pid != bl.pid JOIN pg_catalog.pg_stat_activity ka ON ka.pid = kl.pid WHERE NOT bl.granted;'

\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) db_size FROM pg_database ORDER BY db_size;'

\set tablesize 'SELECT nspname || \'.\' || relname AS \"relation\", pg_size_pretty(pg_relation_size(C.oid)) AS "size" FROM pg_class C LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace) WHERE nspname NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_relation_size(C.oid) DESC LIMIT 40;'

\set uselesscol 'SELECT nspname, relname, attname, typname, (stanullfrac*100)::int AS null_percent, case when stadistinct &gt;= 0 then stadistinct else abs(stadistinct)*reltuples end AS \"distinct\", case 1 when stakind1 then stavalues1 when stakind2 then stavalues2 end AS \"values\" FROM pg_class c JOIN pg_namespace ns ON (ns.oid=relnamespace) JOIN pg_attribute ON (c.oid=attrelid) JOIN pg_type t ON (t.oid=atttypid) JOIN pg_statistic ON (c.oid=starelid AND staattnum=attnum) WHERE nspname NOT LIKE E\'pg\\\\_%\' AND nspname != \'information_schema\' AND relkind=\'r\' AND NOT attisdropped AND attstattarget != 0 AND reltuples &gt;= 100 AND stadistinct BETWEEN 0 AND 1 ORDER BY nspname, relname, attname;'

\set uptime 'select now() - pg_postmaster_start_time() AS uptime;'

-- Development queries:

\set sp 'SHOW search_path;'
\set bench_mark_cpu_memory 'SELECT SUM(generate_series) FROM generate_series(1,1000000);'
\set bench_mark_cpu_memory_disk 'CREATE TABLE test (id INTEGER PRIMARY KEY); INSERT INTO test VALUES(generate_series(1,100000)); EXPLAIN ANALYZE SELECT COUNT(*) FROM test;'
\set clear '\\! clear;'
\set ll '\\! ls -lrt;'
